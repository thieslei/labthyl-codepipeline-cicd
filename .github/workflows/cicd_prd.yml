name: Terraform Deploy

on:
  push: { branches: [main] }
  pull_request: { branches: [main] }
  
env:
  #TF_VERSION: 1.0.8
  TF_WORKING_DIR: ./infradeployment
  TF_ENVIRONMENTS_TFVARS_PATH: ./infradeployment/env
  TF_WORKSPACE: PRD
  ENV: PRD

jobs:
  deploy:
    name: Terraform Deploy PRD
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        #with:
          #terraform_version: latest
          #terraform_version: ${{ env.TF_VERSION }}

      - name: AWS IAM Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
  
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform init
        id: terraform-init
        run: terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}
        env:
          TF_IN_AUTOMATION: true

      - name: Terraform Validate
        id: terraform-validate
        run: terraform validate -no-color
        working-directory: ${{ env.TF_WORKING_DIR }}
        
      - name: Terraform Plan
        id: terraform-plan
        run: terraform plan -no-color
        working-directory: ${{ env.TF_WORKING_DIR }}
        continue-on-error: false

#      - name: Terraform Apply
#        if: ${{ github.event_name == 'pull_request' }}
#        id: terraform-apply
#        run: terraform apply -auto-approve
#        working-directory: ${{ env.TF_WORKING_DIR }}

#      - name: Terraform Destroy
#        if: ${{ github.event_name == 'push' }}
#        id: terraform-destroy
#        run: terraform destroy -auto-approve
#        working-directory: ${{ env.TF_WORKING_DIR }}